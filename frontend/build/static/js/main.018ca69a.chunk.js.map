{"version":3,"sources":["CategoryStore.js","helpers/useChat.js","helpers/serverEndpoint.js","components/chat/Chat.js","components/content/Content.js","components/login/login-button.js","components/logout/logout-button.js","components/authentication/authentication-button.js","components/profile/profile.js","components/authentication/auth-nav.js","components/nav/MainNav.js","components/nav/NavBar.js","App.js","auth/auth0-provider-with-history.js","index.js"],"names":["CategoryStore","Store","category","NEW_CHAT_MESSAGE_EVENT","useChat","roomId","username","useState","messages","setMessages","socketRef","useRef","useEffect","current","socketIOClient","forceNew","reconnectionDelay","reconnection","reconnectionAttempts","transports","agent","upgrade","rejectUnauthorized","query","on","message","incomingMessage","ownedByCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","err","alert","ChatRoom","props","room","React","newMessage","setNewMessage","console","log","element","document","getElementById","scrollTop","scrollHeight","clientHeight","className","map","i","value","onChange","event","target","placeholder","onClick","length","Content","content","setContent","modalVisible","setModalVisible","SERVER_URL","userId","setUserId","userName","setUserName","contentTitle","setContentTitle","contentBody","setContentBody","imageLink","setImageLink","postCategory","setPostCategory","rating","setRating","lengthOfUse","setLengthOfUse","productLink","setProductLink","useAuth0","user","isAuthenticated","isLoading","state","getAllContent","Axios","method","url","headers","then","res","status","data","reverse","catch","error","sub","nickname","hide","likeButtonRenderer","userList","button","includes","style","display","justifyItems","flexFlow","paddingTop","visible","onClose","animation","width","height","onSubmit","newContent","post","newContentList","unshift","response","e","type","name","required","rows","cols","maxLength","classNames","count","ratingVal","size","activeColor","edit","isHalf","index","$numberDecimal","src","alt","likes","likedByUsers","updatedLikedByUsers","likeModifier","filter","patch","likePost","_id","href","contentCategory","postDate","Chat","LoginButton","loginWithRedirect","LogoutButton","logout","returnTo","window","location","origin","AuthenticationButton","Profile","profilePic","setProfilePic","userEmail","setUserEmail","editing","setValue","picture","fetchBio","userBio","updateBio","put","onSave","AuthNav","MainNav","to","exact","activeClassName","update","s","NavDropdown","title","Item","NavBar","App","path","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","onRedirectCallback","appState","push","pathname","ReactDOM","render"],"mappings":"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","file":"static/js/main.018ca69a.chunk.js","sourcesContent":["import { Store } from \"pullstate\";\r\n\r\nexport const CategoryStore = new Store({\r\n  category: \"\",\r\n});","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport ENDPOINT from \"./serverEndpoint\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"chat\"; // Name of the event\r\nconst SOCKET_SERVER_URL = ENDPOINT;\r\n\r\n\r\nconst useChat = (roomId, username) => {\r\n    const [messages, setMessages] = useState([]); // Sent and received messages\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        // Creates a WebSocket connection\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            forceNew: true,\r\n            reconnectionDelay: 1000,\r\n            reconnection: true,\r\n            reconnectionAttempts: 10,\r\n            transports: ['websocket'],\r\n            agent: false,\r\n            upgrade: false,\r\n            rejectUnauthorized: false,\r\n            query: { roomId, username }\r\n        });\r\n\r\n        // Listens for incoming messages\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n            const incomingMessage = {\r\n                ...message,\r\n                ownedByCurrentUser: message.senderId === socketRef.current.id,\r\n            };\r\n            setMessages((messages) => [...messages, incomingMessage]);\r\n        });\r\n\r\n        // Destroys the socket reference\r\n        // when the connection is closed\r\n        return () => {\r\n            socketRef.current.disconnect();\r\n        };\r\n    }, [roomId]);\r\n\r\n    // Sends a message to the server that\r\n    // forwards it to all users in the same room\r\n    const sendMessage = (messageBody) => {\r\n        try {\r\n            socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n                body: messageBody,\r\n                senderId: socketRef.current.id,\r\n            });\r\n        } catch (err) {\r\n            alert(err);\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return { messages, sendMessage };\r\n};\r\n\r\nexport default useChat;","const ENDPOINT = \"https://g9-messaging-service.herokuapp.com/\";\r\nexport default ENDPOINT;","import React, { useEffect } from \"react\";\r\n\r\nimport \"./chatRoom.css\";\r\nimport useChat from \"../../helpers/useChat\"\r\n\r\n\r\nconst ChatRoom = (props) => {\r\n  const roomId = props.room; // Gets roomId\r\n  const username = props.username; // Get Username\r\n  const { messages, sendMessage } = useChat(roomId); // Creates a websocket and manages messaging\r\n  const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\r\n\r\n  console.log(roomId)\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    setNewMessage(event.target.value);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if(!newMessage.length == 0){\r\n      sendMessage(newMessage);\r\n      setNewMessage(\"\");\r\n    }\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    var element = document.getElementById(\"scroll-To-Top\");\r\n\r\n    element.scrollTop = element.scrollHeight - element.clientHeight;\r\n\r\n  });\r\n\r\n\r\n  return (\r\n    <div className=\"chat-room-container\">\r\n      <h4 className=\"room-name\">{roomId !==''? `Category: ${roomId}`: null} </h4>\r\n\r\n      <h4 className=\"combinedDiv\">Your username: {username}</h4>\r\n      \r\n      <div id=\"scroll-To-Top\" className=\"messages-container\">\r\n        <ol className=\"messages-list\">\r\n          {messages.map((message, i) => (\r\n            <li id=\"\"\r\n              key={i}\r\n              className={`message-item ${\r\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\r\n                }`}\r\n            >\r\n              {message.body}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n      <div className=\"combinedDiv\">\r\n      <textarea\r\n        value={newMessage}\r\n        onChange={handleNewMessageChange}\r\n        placeholder=\"Write message...\"\r\n        className=\"new-message-input-field\"\r\n      />\r\n         <button onClick={handleSendMessage} className=\"send-message-button\">\r\n            Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport './Content.css'\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { CategoryStore } from '../../CategoryStore'\r\nimport ChatRoom from \"../chat/Chat\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\n\r\nexport var setSpecificCategory = (e, data) => {\r\n\r\n    e.preventDefault();\r\n    e.persist()\r\n    var tempcat = e.currentTarget.value\r\n    //  console.log(\"name is  \", tempcat)\r\n    //  console.log(e.target.value)\r\n    console.log(data)\r\n    this.setNewContent(data)\r\n\r\n};\r\n\r\nfunction Content() {\r\n    // content state from fetch\r\n    const [content, setContent] = useState([]);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const SERVER_URL = \"https://g9-content-service.herokuapp.com\"\r\n\r\n    // Form states\r\n    // Use defaults until user database is implemented\r\n    const [userId, setUserId] = useState();\r\n    const [userName, setUserName] = useState();\r\n\r\n    const [contentTitle, setContentTitle] = useState(\"\");\r\n    const [contentBody, setContentBody] = useState(\"\");\r\n    const [imageLink, setImageLink] = useState(null);\r\n    const [postCategory, setPostCategory] = useState(\"Computers\");\r\n    const [rating, setRating] = useState(0.0);\r\n    const [lengthOfUse, setLengthOfUse] = useState(\"less than a week\");\r\n    const [productLink, setProductLink] = useState(\"\")\r\n\r\n    // const [NewCategoryContent,setNewContent] = useState(\"Category\");\r\n\r\n    const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n    const category = CategoryStore.useState(state => state.category)\r\n\r\n\r\n\r\n\r\n    const getAllContent = () => {\r\n        Axios({\r\n            method: \"GET\",\r\n            url: `${SERVER_URL}/content/`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                // Cheap way to get the latest posts on top.\r\n                // Potentially think of something more fancy like sorting by date explicitly.\r\n                setContent(res.data.reverse());\r\n                console.log(res.data)\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getting an error \", error)\r\n        });\r\n        // console.log(\"dsahdjasda \", `${SERVER_URL}/content/${NewCategoryContent}`)\r\n    }\r\n\r\n\r\n    const getAllContentInCategory = () => {\r\n        Axios({\r\n            method: \"GET\",\r\n            url: `${SERVER_URL}/content/Category/${category}`,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n\r\n                setContent(res.data.reverse());\r\n            }\r\n        }).catch(error => {\r\n            console.log(\"getting an error \", error)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        // call server and return content objects\r\n        getAllContent();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (category === \"\") {\r\n            getAllContent();\r\n        } else {\r\n            getAllContentInCategory();\r\n        }\r\n    }, [category])\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            if (isAuthenticated) {\r\n                setUserId(user.sub)\r\n                setUserName(user.nickname)\r\n            }\r\n        }\r\n    }, [isAuthenticated])\r\n\r\n\r\n    const show = () => setModalVisible(true);\r\n    const hide = () => setModalVisible(false);\r\n\r\n    const postContent = (event) => {\r\n        // event.preventDefault();\r\n        hide();\r\n        let newContent = {\r\n            userId: userId,\r\n            username: userName,\r\n            contentTitle: contentTitle,\r\n            contentBody: contentBody,\r\n            rating: rating,\r\n            productLink: productLink,\r\n            lengthOfUse, lengthOfUse,\r\n            contentCategory: postCategory\r\n        }\r\n        if (imageLink !== null && imageLink !== \"\") {\r\n            newContent.imageLink = imageLink;\r\n\r\n        }\r\n\r\n\r\n        Axios.post(`${SERVER_URL}/content`, newContent, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    const newContentList = content.unshift(res.data);\r\n                    setContent(newContentList);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n            });;\r\n    }\r\n\r\n\r\n    const likePost = (id, likes, index, likedByUsers) => {\r\n        if (isAuthenticated && !isLoading) {\r\n\r\n            let updatedLikedByUsers = likedByUsers;\r\n            let likeModifier = 0\r\n\r\n\r\n            if (!likedByUsers.includes(userId)) {\r\n                updatedLikedByUsers = [...likedByUsers, userId];\r\n                likeModifier = 1;\r\n            } else {\r\n                updatedLikedByUsers = likedByUsers.filter(id => id !== userId)\r\n                likeModifier = -1;\r\n            }\r\n\r\n\r\n            Axios.patch(`${SERVER_URL}/content/${id}`, { likes: likes + likeModifier, likedByUsers: updatedLikedByUsers }, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n                .then(res => {\r\n                    if (res.status === 200) {\r\n                        console.log(\"old\", likedByUsers)\r\n                        console.log(\"new\", updatedLikedByUsers)\r\n                        setContent(content => ([...content, content[index].likes += likeModifier]))\r\n                        setContent(content => ([...content, content[index].likedByUsers = updatedLikedByUsers]))\r\n\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response)\r\n                });\r\n        }\r\n    }\r\n\r\n    const likeButtonRenderer = (userList) => {\r\n        let button = null;\r\n        if (!isLoading && isAuthenticated) {\r\n            if (userList) {\r\n                if (userList.includes(userId)) {\r\n                    button = <span className=\"like-btn\">❤️</span>\r\n                } else {\r\n                    button = <span className=\"like-btn\">🤍</span>\r\n                }\r\n            }\r\n        }\r\n\r\n        return button;\r\n\r\n    }\r\n\r\n    const ratingChanged = ratingVal => {\r\n        setRating(ratingVal);\r\n    }\r\n\r\n    const selectLengthOfUse = e => {\r\n        setLengthOfUse(e.target.value)\r\n    }\r\n\r\n    function selectDropDown(e) {\r\n        setPostCategory(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", justifyItems: 'center', flexFlow: \"column\", paddingTop: \"80px\" }}>\r\n            <Rodal visible={modalVisible} onClose={() => hide()} animation=\"rotate\" width={900} height={910}>\r\n                <div>\r\n\r\n                    <form onSubmit={postContent}>\r\n                        <input\r\n                            className=\"post-input-field\"\r\n                            value={contentTitle}\r\n                            onChange={e => setContentTitle(e.target.value)}\r\n                            placeholder=\"Title\"\r\n                            type=\"text\"\r\n                            name=\"contentTitle\"\r\n                            required\r\n                        />\r\n                        <br />\r\n\r\n                        <textarea\r\n                            value={contentBody}\r\n                            className=\"post-text-area\"\r\n                            rows=\"11\"\r\n                            cols=\"100\"\r\n                            maxLength=\"2000\"\r\n                            onChange={e => setContentBody(e.target.value)}\r\n                            placeholder=\"Your new post goes here...\"\r\n                            type=\"text\"\r\n                            name=\"contentBody\"\r\n                            required\r\n                        />\r\n                        <br />\r\n\r\n\r\n                        <input\r\n                            value={imageLink}\r\n                            className=\"post-input-field\"\r\n                            onChange={e => setImageLink(e.target.value)}\r\n                            placeholder=\"Paste your image link here\"\r\n                            type=\"text\"\r\n                            name=\"imageLink\"\r\n                        />\r\n                        <br />\r\n\r\n                        <ReactStars\r\n                            classNames=\"rating-box\"\r\n                            count={5}\r\n                            onChange={ratingChanged}\r\n                            size={30}\r\n                            activeColor=\"#eb4034\"\r\n                            value={rating}\r\n                            edit={true}\r\n                            isHalf={true}\r\n                        />\r\n                        <br />\r\n\r\n                        <select\r\n                            className=\"post-input-field\"\r\n                            onChange={selectLengthOfUse}\r\n                            value={lengthOfUse}\r\n                        >\r\n                            <option value=\"less than a week\">Less than a week</option>\r\n                            <option value=\"about a week\">About a week</option>\r\n                            <option value=\"about a month\">About a month</option>\r\n                            <option value=\"about 6 months\">About six months</option>\r\n                            <option value=\"about a year\">About a year</option>\r\n                            <option value=\"over 2 years\">Over 2 years</option>\r\n                            <option value=\"over 5 years\">Over 5 years</option>\r\n\r\n\r\n                        </select>\r\n                        <br />\r\n\r\n                        <input\r\n                            value={productLink}\r\n                            className=\"post-input-field\"\r\n                            onChange={e => setProductLink(e.target.value)}\r\n                            placeholder=\"Pase the link to the product or service\"\r\n                            type=\"text\"\r\n                            name=\"productLink\"\r\n                        />\r\n                        <br />\r\n\r\n                        <select\r\n                            className=\"post-input-field\"\r\n                            onChange={selectDropDown}\r\n                            value={postCategory}\r\n                        >\r\n                            <option value=\"Computers\">Computers</option>\r\n                            <option value=\"Electronics\">Electronics</option>\r\n                            <option value=\"Food\">Food</option>\r\n                            <option value=\"Music\">Music</option>\r\n                            <option value=\"Art\">Art</option>\r\n                            <option value=\"Film\">Film</option>\r\n                            <option value=\"Gaming\">Gaming</option>\r\n                            <option value=\"Travel\">Travel</option>\r\n                            <option value=\"Pets\">Pets</option>\r\n                            <option value=\"Fashion\">Fashion</option>\r\n                            <option value=\"Cars\">Cars</option>\r\n                            <option value=\"Sports\">Sports</option>\r\n                            <option value=\"Toys\">Toys</option>\r\n                            <option value=\"Home\">Home</option>\r\n\r\n                        </select>\r\n\r\n                        <br />\r\n\r\n\r\n                        <input className=\"post-submit\" type=\"submit\" value=\"PUBLISH\" />\r\n\r\n                    </form>\r\n                </div>\r\n            </Rodal>\r\n            <div className=\"content-houser\">\r\n                <div className=\"content-main\">\r\n                    {content.map((post, index) => (\r\n                        <div className=\"container-border\">\r\n                            <div className=\"content-container\">\r\n                                {/* main content */}\r\n                                <div>\r\n                                    <h2>{post.contentTitle}</h2>\r\n\r\n                                    <p>\r\n                                        {post.contentBody}\r\n                                    </p>\r\n\r\n                                    <p>Been using for {post.lengthOfUse}</p>\r\n\r\n                                    <div className=\"rating-container\">\r\n                                    <ReactStars\r\n                                        classNames=\"rating-box\"\r\n                                        count={5}\r\n                                        size={30}\r\n                                        activeColor=\"#ff2652\"\r\n                                        value={post.rating.$numberDecimal}\r\n                                        edit={false}\r\n                                        isHalf={true}\r\n                                    />\r\n                                    </div>\r\n                                    {/* TODO: add link to user profile once user db is setup */}\r\n                                    <span>by: </span> <b>{post.username}</b>           \r\n\r\n                                    <div className=\"content-img-container\">\r\n                                    {post.imageLink ? <img className=\"content-img\" src={post.imageLink} alt=\"image\" /> : null}\r\n                                    </div>\r\n\r\n                                    <h2 className=\"like-wrapper\"> <span onClick={() => likePost(post._id, post.likes, index, post.likedByUsers)}>{likeButtonRenderer(post.likedByUsers)}</span> {post.likes}</h2>\r\n                                    <br />\r\n                                    <a className=\"prod-btn-holder\" target=\"_blank\" href={post.productLink}><div className=\"product-link-btn\">🛒 Available Here</div></a><br/>\r\n                                    <br />\r\n                                    <p>Category: {post.contentCategory}</p>\r\n                                    <span className=\"date-span\">{post.postDate}</span>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>)\r\n                    )}\r\n                </div>\r\n\r\n                {isAuthenticated ? <div className=\"new-post-btn\" onClick={() => show()}>📝 CREATE NEW POST</div> : null}\r\n                <div className=\"content-chat\">\r\n                    {isAuthenticated ? <ChatRoom room={category} username={userName} /> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-outline-info btn-block\"\r\n      onClick={() => loginWithRedirect()}\r\n    >\r\n      Log In\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n  return (\r\n    <button\r\n      className=\"btn btn-outline-danger btn-block\"\r\n      onClick={() =>\r\n        logout({\r\n          returnTo: window.location.origin,\r\n        })\r\n      }\r\n    >\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from \"react\";\r\n\r\nimport LoginButton from \"../login/login-button\";\r\nimport LogoutButton from \"../logout/logout-button\";\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst AuthenticationButton = () => {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  return isAuthenticated ? <LogoutButton /> : <LoginButton />;\r\n};\r\n\r\nexport default AuthenticationButton;","import React, { useState, useEffect } from \"react\";\nimport './profile.css'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport EdiText from 'react-editext'\nimport Axios from \"axios\";\n\nfunction Profile() {\n\n\n    const { user, isAuthenticated, isLoading } = useAuth0();\n    // Form states\n    // Use defaults until user database is implemented\n    const [userId, setUserId] = useState(\"\");\n    const [userName, setUserName] = useState(\"\");\n    const [profilePic, setProfilePic] = useState(\"\");\n    const [userEmail, setUserEmail] = useState(\"\");\n\n    const [editing, setEditing] = useState(false);\n    const [value, setValue] = useState(\"Tell us a bit about yourself...\");\n    const SERVER_URL = \"https://g9-profile-service.herokuapp.com\"\n\n    useEffect(() => {\n        if (!isLoading) {\n            if (isAuthenticated) {\n                if (user) {\n                    console.log(user)\n                    setUserId(user.sub);\n                    setUserName(user.nickname);\n                    setProfilePic(user.picture)\n                    setUserEmail(user.name);\n                    fetchBio();\n                }\n            }\n        }\n    }, [isAuthenticated])\n\n    const handleSave = (value) => {\n        updateBio(value);\n        setValue(value);\n    };\n\n\n    const fetchBio = () => {\n        Axios({\n            method: \"GET\",\n            url: `${SERVER_URL}/profile/${user.sub}`,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(res => {\n            if (res.status === 200) {\n                setValue(res.data.userBio)\n            }\n        }).catch(error => {\n            console.log(\"No bio was found, default bio will be used\")\n        });\n\n    }\n\n    const updateBio = (value) => {\n        if (isAuthenticated && ! isLoading){\n            Axios.put(`${SERVER_URL}/profile/${user.sub}`, { userId: user.sub , userBio: value }, {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            })\n                .then(res => {\n                    if (res.status === 200) {\n                       console.log(\" bio saved as: \", res.data)\n                    }\n                })\n                .catch(error => {\n                    console.log(error.response)\n                });\n        }\n    }\n\n    return (\n\n        <div style={{ paddingTop: \"60px\" }} className=\"profile-wrapper\">\n            <div className=\"profile-container\">\n                {isAuthenticated ?\n                    <div className=\"profile-core-container\">\n                        <div className=\"profile-card\">\n                            <div className=\"card-li\">\n                                <div className=\"profile-pic-border\">\n                                    <img src={profilePic} className=\"profile-pic\" alt=\"profile picture\" />\n                                </div>\n                            </div>\n                            <div className=\"card-li\">\n                                <div className=\"profile-info-container\">\n                                    <div>\n                                        <h1> {userName} </h1>\n                                        <h2> {userEmail} </h2>\n                                        <div className=\"prof-edit-text\">\n                                            <EdiText\n                                                value={value}\n                                                type=\"text\"\n                                                onSave={handleSave}\n                                                editing={editing}\n                                            />\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n                    </div> :\n                    <>\n                        <div className=\"profile-logout-container\">\n                            <div>\n                                <h4>Oops looks like you are not signed in...</h4>\n                                <h4>Please sing in to view your profile information</h4>\n                            </div>\n                        </div>\n                    </>\n                }\n\n            </div>\n\n        </div>\n    );\n\n\n}\n\n\n\nexport default Profile;\n","import React from \"react\";\r\nimport AuthenticationButton from \"./authentication-button\";\r\n\r\nconst AuthNav = () => (\r\n  <div className=\"navbar-nav\">\r\n    <AuthenticationButton />\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;","import { NavLink } from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\r\nimport './nav.css'\r\nimport {CategoryStore} from \"../../CategoryStore\" \r\n\r\nconst MainNav = () => {\r\n\r\n    return(\r\n    <>\r\n        <div className=\"navbar-nav mr-auto\">\r\n            <NavLink\r\n                to=\"/\"\r\n                exact\r\n                className=\"nav-link nav-text ml-auto\"\r\n                activeClassName=\"router-link-exact-active\"\r\n                onClick={() => CategoryStore.update(s => {s.category = \"\"})}\r\n            > Home\r\n            </NavLink>\r\n\r\n            <NavDropdown title=\"Category\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Computers\"})} >Computers</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Electronics\"})} >Electronics</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Food\"})}>Food</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Music\"})}>Music</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Film\"})}>Film</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Gaming\"})}>Gaming</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Travel\"})}>Travel</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Pets\"})}>Pets</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Fashion\"})}>Fashion</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Cars\"})}>Cars</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Sports\"})}>Sports</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Toys\"})}>Toys</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={() => CategoryStore.update(s => {s.category = \"Home\"})}>Home</NavDropdown.Item>\r\n\r\n            </NavDropdown>\r\n        </div>\r\n\r\n        <div className=\"navbar-nav ml-auto\">\r\n            <NavLink\r\n                to=\"/profile\"\r\n                exact\r\n                className=\"nav-link nav-text \"\r\n                activeClassName=\"router-link-exact-active\"\r\n            >\r\n                👤\r\n    </NavLink>\r\n        </div>\r\n    </>\r\n    )\r\n\r\n};\r\n\r\nexport default MainNav;","import React from \"react\";\r\nimport AuthNav from \"../authentication/auth-nav\";\r\nimport MainNav from \"./MainNav\";\r\nimport './nav.css'\r\n\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <div className=\"nav-container mb-3\">\r\n      <nav className=\"navbar navbar-expand-md navbar-light\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"navbar-brand logo\" />\r\n          <MainNav />\r\n          <AuthNav />\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {setSpecificCategory} from \"./components/content/Content\"\nimport Content from './components/content/Content';\nimport { Navbar, Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport AuthenticationButton from './components/authentication/authentication-button';\nimport Profile from \"./components/profile/profile\";\nimport NavBar from './components/nav/NavBar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n\n        <div>\n          <NavBar />\n          <hr className=\"nav-line\" />\n        </div>\n\n        <Switch>\n          <Route path=\"/profile\">\n            <Profile />\n          </Route>\n          <Route path=\"/\">\n            <Content/>\n          </Route>\n\n        </Switch>\n\n      </div>\n\n    </Router>\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\n  const history = useHistory();\r\n\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  return (\r\n    <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      redirectUri={window.location.origin}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}